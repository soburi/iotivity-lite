{
  "coap_get_header_accept": {
    "type": "int",
    "param": {
      "packet": "void*",
      "accept": "unsigned int*"
    }
  },
  "coap_get_header_block1": {
    "type": "int",
    "param": {
      "packet": "void*",
      "num": "uint32_t*",
      "more": "uint8_t*",
      "size": "uint16_t*",
      "offset": "uint32_t*"
    }
  },
  "coap_get_header_block2": {
    "type": "int",
    "param": {
      "packet": "void*",
      "num": "uint32_t*",
      "more": "uint8_t*",
      "size": "uint16_t*",
      "offset": "uint32_t*"
    }
  },
  "coap_get_header_content_format": {
    "type": "int",
    "param": {
      "packet": "void*",
      "format": "unsigned int*"
    }
  },
  "coap_get_header_etag": {
    "type": "int",
    "param": {
      "packet": "void*",
      "etag": "const uint8_t**"
    }
  },
  "coap_get_header_if_match": {
    "type": "int",
    "param": {
      "packet": "void*",
      "etag": "const uint8_t**"
    }
  },
  "coap_get_header_if_none_match": {
    "type": "int",
    "param": {
      "packet": "void*"
    }
  },
  "coap_get_header_location_path": {
    "type": "int",
    "param": {
      "packet": "void*",
      "path": "const char**"
    }
  },
  "coap_get_header_location_query": {
    "type": "int",
    "param": {
      "packet": "void*",
      "query": "const char**"
    }
  },
  "coap_get_header_max_age": {
    "type": "int",
    "param": {
      "packet": "void*",
      "age": "uint32_t*"
    }
  },
  "coap_get_header_observe": {
    "type": "int",
    "param": {
      "packet": "void*",
      "observe": "uint32_t*"
    }
  },
  "coap_get_header_proxy_scheme": {
    "type": "int",
    "param": {
      "packet": "void*",
      "scheme": "const char**"
    }
  },
  "coap_get_header_proxy_uri": {
    "type": "int",
    "param": {
      "packet": "void*",
      "uri": "const char**"
    }
  },
  "coap_get_header_size1": {
    "type": "int",
    "param": {
      "packet": "void*",
      "size": "uint32_t*"
    }
  },
  "coap_get_header_size2": {
    "type": "int",
    "param": {
      "packet": "void*",
      "size": "uint32_t*"
    }
  },
  "coap_get_header_uri_host": {
    "type": "int",
    "param": {
      "packet": "void*",
      "host": "const char**"
    }
  },
  "coap_get_header_uri_path": {
    "type": "size_t",
    "param": {
      "packet": "void*",
      "path": "const char**"
    }
  },
  "coap_get_header_uri_query": {
    "type": "size_t",
    "param": {
      "packet": "void*",
      "query": "const char**"
    }
  },
  "coap_get_mid": {
    "type": "uint16_t",
    "param": {
    }
  },
  "coap_get_payload": {
    "type": "int",
    "param": {
      "packet": "void*",
      "payload": "const uint8_t**"
    }
  },
  "coap_get_post_variable": {
    "type": "int",
    "param": {
      "packet": "void*",
      "name": "const char*",
      "output": "const char**"
    }
  },
  "coap_get_query_variable": {
    "type": "int",
    "param": {
      "packet": "void*",
      "name": "const char*",
      "output": "const char**"
    }
  },
  "coap_init_connection": {
    "type": "void",
    "param": {
    }
  },
  "coap_send_message": {
    "type": "void",
    "param": {
      "message": "oc_message_t*"
    }
  },
  "coap_serialize_message": {
    "type": "size_t",
    "param": {
      "packet": "void*",
      "buffer": "uint8_t*"
    }
  },
  "coap_set_header_accept": {
    "type": "int",
    "param": {
      "packet": "void*",
      "accept": "unsigned int"
    }
  },
  "coap_set_header_block1": {
    "type": "int",
    "param": {
      "packet": "void*",
      "num": "uint32_t",
      "more": "uint8_t",
      "size": "uint16_t"
    }
  },
  "coap_set_header_block2": {
    "type": "int",
    "param": {
      "packet": "void*",
      "num": "uint32_t",
      "more": "uint8_t",
      "size": "uint16_t"
    }
  },
  "coap_set_header_content_format": {
    "type": "int",
    "param": {
      "packet": "void*",
      "format": "unsigned int"
    }
  },
  "coap_set_header_etag": {
    "type": "int",
    "param": {
      "packet": "void*",
      "etag": "const uint8_t*",
      "etag_len": "size_t"
    }
  },
  "coap_set_header_if_match": {
    "type": "int",
    "param": {
      "packet": "void*",
      "etag": "const uint8_t*",
      "etag_len": "size_t"
    }
  },
  "coap_set_header_if_none_match": {
    "type": "int",
    "param": {
      "packet": "void*"
    }
  },
  "coap_set_header_location_path": {
    "type": "int",
    "param": {
      "packet": "void*",
      "path": "const char*"
    }
  },
  "coap_set_header_location_query": {
    "type": "size_t",
    "param": {
      "packet": "void*",
      "query": "const char*"
    }
  },
  "coap_set_header_max_age": {
    "type": "int",
    "param": {
      "packet": "void*",
      "age": "uint32_t"
    }
  },
  "coap_set_header_observe": {
    "type": "int",
    "param": {
      "packet": "void*",
      "observe": "uint32_t"
    }
  },
  "coap_set_header_proxy_scheme": {
    "type": "int",
    "param": {
      "packet": "void*",
      "scheme": "const char*"
    }
  },
  "coap_set_header_proxy_uri": {
    "type": "int",
    "param": {
      "packet": "void*",
      "uri": "const char*"
    }
  },
  "coap_set_header_size1": {
    "type": "int",
    "param": {
      "packet": "void*",
      "size": "uint32_t"
    }
  },
  "coap_set_header_size2": {
    "type": "int",
    "param": {
      "packet": "void*",
      "size": "uint32_t"
    }
  },
  "coap_set_header_uri_host": {
    "type": "int",
    "param": {
      "packet": "void*",
      "host": "const char*"
    }
  },
  "coap_set_header_uri_path": {
    "type": "size_t",
    "param": {
      "packet": "void*",
      "path": "const char*",
      "path_len": "size_t"
    }
  },
  "coap_set_header_uri_query": {
    "type": "size_t",
    "param": {
      "packet": "void*",
      "query": "const char*"
    }
  },
  "coap_set_payload": {
    "type": "int",
    "param": {
      "packet": "void*",
      "payload": "const void*",
      "length": "size_t"
    }
  },
  "coap_set_status_code": {
    "type": "int",
    "param": {
      "packet": "void*",
      "code": "unsigned int"
    }
  },
  "coap_set_token": {
    "type": "int",
    "param": {
      "packet": "void*",
      "token": "const uint8_t*",
      "token_len": "size_t"
    }
  },
  "coap_tcp_get_packet_size": {
    "type": "size_t",
    "param": {
      "data": "const uint8_t*"
    }
  },
  "coap_tcp_init_message": {
    "type": "void",
    "param": {
      "packet": "void*",
      "code": "uint8_t"
    }
  },
  "coap_tcp_parse_message": {
    "type": "coap_status_t",
    "param": {
      "packet": "void*",
      "data": "uint8_t*",
      "data_len": "uint32_t"
    }
  },
  "coap_udp_init_message": {
    "type": "void",
    "param": {
      "packet": "void*",
      "type": "coap_message_type_t",
      "code": "uint8_t",
      "mid": "uint16_t"
    }
  },
  "coap_udp_parse_message": {
    "type": "coap_status_t",
    "param": {
      "request": "void*",
      "data": "uint8_t*",
      "data_len": "uint16_t"
    }
  },
  "coap_check_signal_message": {
    "type": "int",
    "param": {
      "packet": "void*"
    }
  },
  "coap_send_abort_message": {
    "type": "int",
    "param": {
      "endpoint": "oc_endpoint_t*",
      "opt": "uint16_t",
      "diagnostic": "const char*",
      "diagnostic_len": "size_t"
    }
  },
  "coap_send_csm_message": {
    "type": "int",
    "param": {
      "endpoint": "oc_endpoint_t*",
      "max_message_size": "uint32_t",
      "blockwise_transfer_option": "uint8_t"
    }
  },
  "coap_send_ping_message": {
    "type": "int",
    "param": {
      "endpoint": "oc_endpoint_t*",
      "custody_option": "uint8_t",
      "token": "uint8_t*",
      "token_len": "uint8_t"
    }
  },
  "coap_send_pong_message": {
    "type": "int",
    "param": {
      "endpoint": "oc_endpoint_t*",
      "packet": "void*"
    }
  },
  "coap_send_release_message": {
    "type": "int",
    "param": {
      "endpoint": "oc_endpoint_t*",
      "alt_addr": "const char*",
      "alt_addr_len": "size_t",
      "hold_off": "uint32_t"
    }
  },
  "coap_signal_get_alt_addr": {
    "type": "size_t",
    "param": {
      "packet": "void*",
      "addr": "const char**"
    }
  },
  "coap_signal_get_bad_csm": {
    "type": "int",
    "param": {
      "packet": "void*",
      "opt": "uint16_t*"
    }
  },
  "coap_signal_get_blockwise_transfer": {
    "type": "int",
    "param": {
      "packet": "void*",
      "blockwise_transfer": "uint8_t*"
    }
  },
  "coap_signal_get_custody": {
    "type": "int",
    "param": {
      "packet": "void*",
      "custody": "uint8_t*"
    }
  },
  "coap_signal_get_hold_off": {
    "type": "int",
    "param": {
      "packet": "void*",
      "time_seconds": "uint32_t*"
    }
  },
  "coap_signal_get_max_msg_size": {
    "type": "int",
    "param": {
      "packet": "void*",
      "size": "uint32_t*"
    }
  },
  "coap_signal_set_alt_addr": {
    "type": "size_t",
    "param": {
      "packet": "void*",
      "addr": "const char*",
      "addr_len": "size_t"
    }
  },
  "coap_signal_set_bad_csm": {
    "type": "int",
    "param": {
      "packet": "void*",
      "opt": "uint16_t"
    }
  },
  "coap_signal_set_blockwise_transfer": {
    "type": "int",
    "param": {
      "packet": "void*",
      "blockwise_transfer": "uint8_t"
    }
  },
  "coap_signal_set_custody": {
    "type": "int",
    "param": {
      "packet": "void*",
      "custody": "uint8_t"
    }
  },
  "coap_signal_set_hold_off": {
    "type": "int",
    "param": {
      "packet": "void*",
      "time_seconds": "uint32_t"
    }
  },
  "coap_signal_set_max_msg_size": {
    "type": "int",
    "param": {
      "packet": "void*",
      "size": "uint32_t"
    }
  },
  "handle_coap_signal_message": {
    "type": "int",
    "param": {
      "packet": "void*",
      "endpoint": "oc_endpoint_t*"
    }
  },
  "coap_init_engine": {
    "type": "void",
    "param": {
    }
  },
  "coap_receive": {
    "type": "int",
    "param": {
      "message": "oc_message_t*"
    }
  },
  "OC_PROCESS_NAME": {
    "type": "",
    "param": {
    }
  },
  "oc_assert_all_roles": {
    "type": "void",
    "param": {
      "endpoint": "oc_endpoint_t*",
      "handler": "oc_response_handler_t",
      "user_data": "void*"
    }
  },
  "oc_assert_role": {
    "type": "bool",
    "param": {
      "role": "const char*",
      "authority": "const char*",
      "endpoint": "oc_endpoint_t*",
      "handler": "oc_response_handler_t",
      "user_data": "void*"
    }
  },
  "oc_auto_assert_roles": {
    "type": "void",
    "param": {
      "auto_assert": "bool"
    }
  },
  "oc_get_all_roles": {
    "type": "oc_role_t*",
    "param": {
    }
  },
  "oc_close_session": {
    "type": "void",
    "param": {
      "endpoint": "oc_endpoint_t*"
    }
  },
  "oc_do_delete": {
    "type": "bool",
    "param": {
      "uri": "const char*",
      "endpoint": "oc_endpoint_t*",
      "query": "const char*",
      "handler": "oc_response_handler_t",
      "qos": "oc_qos_t",
      "user_data": "void*"
    }
  },
  "oc_do_get": {
    "type": "bool",
    "param": {
      "uri": "const char*",
      "endpoint": "oc_endpoint_t*",
      "query": "const char*",
      "handler": "oc_response_handler_t",
      "qos": "oc_qos_t",
      "user_data": "void*"
    }
  },
  "oc_do_ip_discovery": {
    "type": "bool",
    "param": {
      "rt": "const char*",
      "handler": "oc_discovery_handler_t",
      "user_data": "void*"
    }
  },
  "oc_do_ip_discovery_all": {
    "type": "bool",
    "param": {
      "handler": "oc_discovery_all_handler_t",
      "user_data": "void*"
    }
  },
  "oc_do_ip_discovery_all_at_endpoint": {
    "type": "bool",
    "param": {
      "handler": "oc_discovery_all_handler_t",
      "endpoint": "oc_endpoint_t*",
      "user_data": "void*"
    }
  },
  "oc_do_ip_discovery_at_endpoint": {
    "type": "bool",
    "param": {
      "rt": "const char*",
      "handler": "oc_discovery_handler_t",
      "endpoint": "oc_endpoint_t*",
      "user_data": "void*"
    }
  },
  "oc_do_ip_multicast": {
    "type": "bool",
    "param": {
      "uri": "const char*",
      "query": "const char*",
      "handler": "oc_response_handler_t",
      "user_data": "void*"
    }
  },
  "oc_do_observe": {
    "type": "bool",
    "param": {
      "uri": "const char*",
      "endpoint": "oc_endpoint_t*",
      "query": "const char*",
      "handler": "oc_response_handler_t",
      "qos": "oc_qos_t",
      "user_data": "void*"
    }
  },
  "oc_do_post": {
    "type": "bool",
    "param": {
    }
  },
  "oc_do_put": {
    "type": "bool",
    "param": {
    }
  },
  "oc_do_realm_local_ipv6_discovery": {
    "type": "bool",
    "param": {
      "rt": "const char*",
      "handler": "oc_discovery_handler_t",
      "user_data": "void*"
    }
  },
  "oc_do_realm_local_ipv6_discovery_all": {
    "type": "bool",
    "param": {
      "handler": "oc_discovery_all_handler_t",
      "user_data": "void*"
    }
  },
  "oc_do_realm_local_ipv6_multicast": {
    "type": "bool",
    "param": {
      "uri": "const char*",
      "query": "const char*",
      "handler": "oc_response_handler_t",
      "user_data": "void*"
    }
  },
  "oc_do_site_local_ipv6_discovery": {
    "type": "bool",
    "param": {
      "rt": "const char*",
      "handler": "oc_discovery_handler_t",
      "user_data": "void*"
    }
  },
  "oc_do_site_local_ipv6_discovery_all": {
    "type": "bool",
    "param": {
      "handler": "oc_discovery_all_handler_t",
      "user_data": "void*"
    }
  },
  "oc_do_site_local_ipv6_multicast": {
    "type": "bool",
    "param": {
      "uri": "const char*",
      "query": "const char*",
      "handler": "oc_response_handler_t",
      "user_data": "void*"
    }
  },
  "oc_free_server_endpoints": {
    "type": "void",
    "param": {
      "endpoint": "oc_endpoint_t*"
    }
  },
  "oc_init_post": {
    "type": "bool",
    "param": {
      "uri": "const char*",
      "endpoint": "oc_endpoint_t*",
      "query": "const char*",
      "handler": "oc_response_handler_t",
      "qos": "oc_qos_t",
      "user_data": "void*"
    }
  },
  "oc_init_put": {
    "type": "bool",
    "param": {
      "uri": "const char*",
      "endpoint": "oc_endpoint_t*",
      "query": "const char*",
      "handler": "oc_response_handler_t",
      "qos": "oc_qos_t",
      "user_data": "void*"
    }
  },
  "oc_send_ping": {
    "type": "bool",
    "param": {
      "custody": "bool",
      "endpoint": "oc_endpoint_t*",
      "timeout_seconds": "uint16_t",
      "handler": "oc_response_handler_t",
      "user_data": "void*"
    }
  },
  "oc_stop_multicast": {
    "type": "void",
    "param": {
      "response": "oc_client_response_t*"
    }
  },
  "oc_stop_observe": {
    "type": "bool",
    "param": {
      "uri": "const char*",
      "endpoint": "oc_endpoint_t*"
    }
  },
  "oc_add_collection": {
    "type": "void",
    "param": {
      "collection": "oc_resource_t*"
    }
  },
  "oc_collection_add_link": {
    "type": "void",
    "param": {
      "collection": "oc_resource_t*",
      "link": "oc_link_t*"
    }
  },
  "oc_collection_add_mandatory_rt": {
    "type": "bool",
    "param": {
      "collection": "oc_resource_t*",
      "rt": "const char*"
    }
  },
  "oc_collection_add_supported_rt": {
    "type": "bool",
    "param": {
      "collection": "oc_resource_t*",
      "rt": "const char*"
    }
  },
  "oc_collection_get_collections": {
    "type": "oc_resource_t*",
    "param": {
    }
  },
  "oc_collection_get_links": {
    "type": "oc_link_t*",
    "param": {
      "collection": "oc_resource_t*"
    }
  },
  "oc_collection_remove_link": {
    "type": "void",
    "param": {
      "collection": "oc_resource_t*",
      "link": "oc_link_t*"
    }
  },
  "oc_collections_add_rt_factory": {
    "type": "bool",
    "param": {
      "rt": "const char*",
      "get_instance": "oc_resource_get_instance_t",
      "free_instance": "oc_resource_free_instance_t"
    }
  },
  "oc_delete_collection": {
    "type": "void",
    "param": {
      "collection": "oc_resource_t*"
    }
  },
  "oc_delete_link": {
    "type": "void",
    "param": {
      "link": "oc_link_t*"
    }
  },
  "oc_link_add_link_param": {
    "type": "void",
    "param": {
      "link": "oc_link_t*",
      "key": "const char*",
      "value": "const char*"
    }
  },
  "oc_link_add_rel": {
    "type": "void",
    "param": {
      "link": "oc_link_t*",
      "rel": "const char*"
    }
  },
  "oc_new_collection": {
    "type": "oc_resource_t*",
    "param": {
      "name": "const char*",
      "uri": "const char*",
      "num_resource_types": "uint8_t",
      "device": "size_t"
    }
  },
  "oc_new_link": {
    "type": "oc_link_t*",
    "param": {
      "resource": "oc_resource_t*"
    }
  },
  "oc_remove_delayed_callback": {
    "type": "void",
    "param": {
      "cb_data": "void*",
      "callback": "oc_trigger_t"
    }
  },
  "oc_set_delayed_callback": {
    "type": "void",
    "param": {
      "cb_data": "void*",
      "callback": "oc_trigger_t",
      "seconds": "uint16_t"
    }
  },
  "oc_set_immutable_device_identifier": {
    "type": "void",
    "param": {
      "device": "size_t",
      "piid": "oc_uuid_t*"
    }
  },
  "oc_add_resource": {
    "type": "bool",
    "param": {
      "resource": "oc_resource_t*"
    }
  },
  "oc_delete_resource": {
    "type": "bool",
    "param": {
      "resource": "oc_resource_t*"
    }
  },
  "oc_device_bind_resource_type": {
    "type": "void",
    "param": {
      "device": "size_t",
      "type": "const char*"
    }
  },
  "oc_get_diagnostic_message": {
    "type": "bool",
    "param": {
      "response": "oc_client_response_t*",
      "msg": "const char**",
      "size": "size_t*"
    }
  },
  "oc_get_query_value": {
    "type": "int",
    "param": {
      "request": "oc_request_t*",
      "key": "const char*",
      "value": "char**"
    }
  },
  "oc_get_request_payload_raw": {
    "type": "bool",
    "param": {
      "request": "oc_request_t*",
      "payload": "const uint8_t**",
      "size": "size_t*",
      "content_format": "oc_content_format_t*"
    }
  },
  "oc_get_response_payload_raw": {
    "type": "bool",
    "param": {
      "response": "oc_client_response_t*",
      "payload": "const uint8_t**",
      "size": "size_t*",
      "content_format": "oc_content_format_t*"
    }
  },
  "oc_ignore_request": {
    "type": "void",
    "param": {
      "request": "oc_request_t*"
    }
  },
  "oc_indicate_separate_response": {
    "type": "void",
    "param": {
      "request": "oc_request_t*",
      "response": "oc_separate_response_t*"
    }
  },
  "oc_init_query_iterator": {
    "type": "void",
    "param": {
    }
  },
  "oc_iterate_query": {
    "type": "int",
    "param": {
      "request": "oc_request_t*",
      "key": "char**",
      "key_len": "size_t*",
      "value": "char**",
      "value_len": "size_t*"
    }
  },
  "oc_iterate_query_get_values": {
    "type": "bool",
    "param": {
      "request": "oc_request_t*",
      "key": "const char*",
      "value": "char**",
      "value_len": "int*"
    }
  },
  "oc_new_resource": {
    "type": "oc_resource_t*",
    "param": {
      "name": "const char*",
      "uri": "const char*",
      "num_resource_types": "uint8_t",
      "device": "size_t"
    }
  },
  "oc_notify_observers": {
    "type": "int",
    "param": {
      "resource": "oc_resource_t*"
    }
  },
  "oc_process_baseline_interface": {
    "type": "void",
    "param": {
      "resource": "oc_resource_t*"
    }
  },
  "oc_resource_bind_resource_interface": {
    "type": "void",
    "param": {
      "resource": "oc_resource_t*",
      "iface_mask": "oc_interface_mask_t"
    }
  },
  "oc_resource_bind_resource_type": {
    "type": "void",
    "param": {
      "resource": "oc_resource_t*",
      "type": "const char*"
    }
  },
  "oc_resource_make_public": {
    "type": "void",
    "param": {
      "resource": "oc_resource_t*"
    }
  },
  "oc_resource_set_default_interface": {
    "type": "void",
    "param": {
      "resource": "oc_resource_t*",
      "iface_mask": "oc_interface_mask_t"
    }
  },
  "oc_resource_set_discoverable": {
    "type": "void",
    "param": {
      "resource": "oc_resource_t*",
      "state": "bool"
    }
  },
  "oc_resource_set_observable": {
    "type": "void",
    "param": {
      "resource": "oc_resource_t*",
      "state": "bool"
    }
  },
  "oc_resource_set_periodic_observable": {
    "type": "void",
    "param": {
      "resource": "oc_resource_t*",
      "seconds": "uint16_t"
    }
  },
  "oc_resource_set_properties_cbs": {
    "type": "void",
    "param": {
      "resource": "oc_resource_t*",
      "get_properties": "oc_get_properties_cb_t",
      "get_propr_user_data": "void*",
      "set_properties": "oc_set_properties_cb_t",
      "set_props_user_data": "void*"
    }
  },
  "oc_resource_set_request_handler": {
    "type": "void",
    "param": {
      "resource": "oc_resource_t*",
      "method": "oc_method_t",
      "callback": "oc_request_callback_t",
      "user_data": "void*"
    }
  },
  "oc_resource_tag_func_desc": {
    "type": "void",
    "param": {
      "resource": "oc_resource_t*",
      "func": "oc_enum_t"
    }
  },
  "oc_resource_tag_pos_desc": {
    "type": "void",
    "param": {
      "resource": "oc_resource_t*",
      "pos": "oc_pos_description_t"
    }
  },
  "oc_resource_tag_pos_rel": {
    "type": "void",
    "param": {
      "resource": "oc_resource_t*",
      "x": "double",
      "y": "double",
      "z": "double"
    }
  },
  "oc_send_diagnostic_message": {
    "type": "void",
    "param": {
      "request": "oc_request_t*",
      "msg": "const char*",
      "msg_len": "size_t",
      "response_code": "oc_status_t"
    }
  },
  "oc_send_response": {
    "type": "void",
    "param": {
      "request": "oc_request_t*",
      "response_code": "oc_status_t"
    }
  },
  "oc_send_response_raw": {
    "type": "void",
    "param": {
      "request": "oc_request_t*",
      "payload": "const uint8_t*",
      "size": "size_t",
      "content_format": "oc_content_format_t",
      "response_code": "oc_status_t"
    }
  },
  "oc_send_separate_response": {
    "type": "void",
    "param": {
      "handle": "oc_separate_response_t*",
      "response_code": "oc_status_t"
    }
  },
  "oc_set_con_write_cb": {
    "type": "void",
    "param": {
      "callback": "oc_con_write_cb_t"
    }
  },
  "oc_set_separate_response_buffer": {
    "type": "void",
    "param": {
      "handle": "oc_separate_response_t*"
    }
  },
  "PT_THREAD": {
    "type": "",
    "param": {
      "thread": "(*)(struct pt*, oc_process_event_t, oc_process_data_t)"
    }
  },
  "oc_timer_expired": {
    "type": "int",
    "param": {
      "t": "struct oc_timer*"
    }
  },
  "oc_timer_remaining": {
    "type": "oc_clock_time_t",
    "param": {
      "t": "struct oc_timer*"
    }
  },
  "oc_timer_reset": {
    "type": "void",
    "param": {
      "t": "struct oc_timer*"
    }
  },
  "oc_timer_restart": {
    "type": "void",
    "param": {
      "t": "struct oc_timer*"
    }
  },
  "oc_timer_set": {
    "type": "void",
    "param": {
      "t": "struct oc_timer*",
      "interval": "oc_clock_time_t"
    }
  },
  "coap_free_all_observers": {
    "type": "void",
    "param": {
    }
  },
  "coap_get_observers": {
    "type": "oc_list_t",
    "param": {
    }
  },
  "coap_notify_collection_baseline": {
    "type": "int",
    "param": {
      "collection": "oc_collection_t*"
    }
  },
  "coap_notify_collection_batch": {
    "type": "int",
    "param": {
      "collection": "oc_collection_t*"
    }
  },
  "coap_notify_collection_links_list": {
    "type": "int",
    "param": {
      "collection": "oc_collection_t*"
    }
  },
  "coap_notify_collection_observers": {
    "type": "int",
    "param": {
      "resource": "oc_resource_t*",
      "response_buf": "oc_response_buffer_t*",
      "iface_mask": "oc_interface_mask_t"
    }
  },
  "coap_notify_observers": {
    "type": "int",
    "param": {
      "resource": "oc_resource_t*",
      "response_buf": "oc_response_buffer_t*",
      "endpoint": "oc_endpoint_t*"
    }
  },
  "coap_observe_handler": {
    "type": "int",
    "param": {
      "request": "void*",
      "response": "void*",
      "resource": "oc_resource_t*",
      "block2_size": "uint16_t",
      "endpoint": "oc_endpoint_t*",
      "iface_mask": "oc_interface_mask_t"
    }
  },
  "coap_remove_observer": {
    "type": "void",
    "param": {
      "o": "coap_observer_t*"
    }
  },
  "coap_remove_observer_by_client": {
    "type": "int",
    "param": {
      "endpoint": "oc_endpoint_t*"
    }
  },
  "coap_remove_observer_by_mid": {
    "type": "int",
    "param": {
      "endpoint": "oc_endpoint_t*",
      "mid": "uint16_t"
    }
  },
  "coap_remove_observer_by_resource": {
    "type": "int",
    "param": {
      "rsc": "const oc_resource_t*"
    }
  },
  "coap_remove_observer_by_token": {
    "type": "int",
    "param": {
      "endpoint": "oc_endpoint_t*",
      "token": "uint8_t*",
      "token_len": "size_t"
    }
  },
  "coap_remove_observers_on_dos_change": {
    "type": "int",
    "param": {
      "device": "size_t",
      "reset": "bool"
    }
  },
  "oc_add_device": {
    "type": "int",
    "param": {
      "uri": "const char*",
      "rt": "const char*",
      "name": "const char*",
      "spec_version": "const char*",
      "data_model_version": "const char*",
      "add_device_cb": "oc_add_device_cb_t",
      "data": "void*"
    }
  },
  "oc_add_ownership_status_cb": {
    "type": "void",
    "param": {
      "cb": "oc_ownership_status_cb_t",
      "user_data": "void*"
    }
  },
  "oc_get_con_res_announced": {
    "type": "bool",
    "param": {
    }
  },
  "oc_init_platform": {
    "type": "int",
    "param": {
      "mfg_name": "const char*",
      "init_platform_cb": "oc_init_platform_cb_t",
      "data": "void*"
    }
  },
  "oc_is_owned_device": {
    "type": "bool",
    "param": {
      "device_index": "size_t"
    }
  },
  "oc_main_init": {
    "type": "int",
    "param": {
      "handler": "const oc_handler_t*"
    }
  },
  "oc_main_poll": {
    "type": "oc_clock_time_t",
    "param": {
    }
  },
  "oc_main_shutdown": {
    "type": "void",
    "param": {
    }
  },
  "oc_remove_ownership_status_cb": {
    "type": "void",
    "param": {
      "cb": "oc_ownership_status_cb_t",
      "user_data": "void*"
    }
  },
  "oc_reset": {
    "type": "void",
    "param": {
    }
  },
  "oc_reset_device": {
    "type": "void",
    "param": {
      "device": "size_t"
    }
  },
  "oc_set_con_res_announced": {
    "type": "void",
    "param": {
      "announce": "bool"
    }
  },
  "oc_set_factory_presets_cb": {
    "type": "void",
    "param": {
      "cb": "oc_factory_presets_cb_t",
      "data": "void*"
    }
  },
  "oc_set_random_pin_callback": {
    "type": "void",
    "param": {
      "cb": "oc_random_pin_cb_t",
      "data": "void*"
    }
  },
  "abort_impl": {
    "type": "void",
    "param": {
    }
  },
  "exit_impl": {
    "type": "void",
    "param": {
      "status": "int"
    }
  },
  "oc_abort": {
    "type": "void",
    "param": {
      "msg": "const char*"
    }
  },
  "oc_exit": {
    "type": "void",
    "param": {
      "status": "int"
    }
  },
  "oc_base64_decode": {
    "type": "int",
    "param": {
      "str": "uint8_t*",
      "len": "size_t"
    }
  },
  "oc_base64_encode": {
    "type": "int",
    "param": {
      "input": "const uint8_t*",
      "input_len": "size_t",
      "output_buffer": "uint8_t*",
      "output_buffer_len": "size_t"
    }
  },
  "oc_blockwise_alloc_request_buffer": {
    "type": "oc_blockwise_state_t*",
    "param": {
      "href": "const char*",
      "href_len": "size_t",
      "endpoint": "oc_endpoint_t*",
      "method": "oc_method_t",
      "role": "oc_blockwise_role_t"
    }
  },
  "oc_blockwise_alloc_response_buffer": {
    "type": "oc_blockwise_state_t*",
    "param": {
      "href": "const char*",
      "href_len": "size_t",
      "endpoint": "oc_endpoint_t*",
      "method": "oc_method_t",
      "role": "oc_blockwise_role_t"
    }
  },
  "oc_blockwise_dispatch_block": {
    "type": "const void*",
    "param": {
      "buffer": "oc_blockwise_state_t*",
      "block_offset": "uint32_t",
      "requested_block_size": "uint32_t",
      "payload_size": "uint32_t*"
    }
  },
  "oc_blockwise_find_request_buffer": {
    "type": "oc_blockwise_state_t*",
    "param": {
      "href": "const char*",
      "href_len": "size_t",
      "endpoint": "oc_endpoint_t*",
      "method": "oc_method_t",
      "query": "const char*",
      "query_len": "size_t",
      "role": "oc_blockwise_role_t"
    }
  },
  "oc_blockwise_find_request_buffer_by_client_cb": {
    "type": "oc_blockwise_state_t*",
    "param": {
      "endpoint": "oc_endpoint_t*",
      "client_cb": "void*"
    }
  },
  "oc_blockwise_find_request_buffer_by_mid": {
    "type": "oc_blockwise_state_t*",
    "param": {
      "mid": "uint16_t"
    }
  },
  "oc_blockwise_find_request_buffer_by_token": {
    "type": "oc_blockwise_state_t*",
    "param": {
      "token": "uint8_t*",
      "token_len": "uint8_t"
    }
  },
  "oc_blockwise_find_response_buffer": {
    "type": "oc_blockwise_state_t*",
    "param": {
      "href": "const char*",
      "href_len": "size_t",
      "endpoint": "oc_endpoint_t*",
      "method": "oc_method_t",
      "query": "const char*",
      "query_len": "size_t",
      "role": "oc_blockwise_role_t"
    }
  },
  "oc_blockwise_find_response_buffer_by_client_cb": {
    "type": "oc_blockwise_state_t*",
    "param": {
      "endpoint": "oc_endpoint_t*",
      "client_cb": "void*"
    }
  },
  "oc_blockwise_find_response_buffer_by_mid": {
    "type": "oc_blockwise_state_t*",
    "param": {
      "mid": "uint16_t"
    }
  },
  "oc_blockwise_find_response_buffer_by_token": {
    "type": "oc_blockwise_state_t*",
    "param": {
      "token": "uint8_t*",
      "token_len": "uint8_t"
    }
  },
  "oc_blockwise_free_request_buffer": {
    "type": "void",
    "param": {
      "buffer": "oc_blockwise_state_t*"
    }
  },
  "oc_blockwise_free_response_buffer": {
    "type": "void",
    "param": {
      "buffer": "oc_blockwise_state_t*"
    }
  },
  "oc_blockwise_handle_block": {
    "type": "bool",
    "param": {
      "buffer": "oc_blockwise_state_t*",
      "incoming_block_offset": "uint32_t",
      "incoming_block": "const uint8_t*",
      "incoming_block_size": "uint32_t"
    }
  },
  "oc_blockwise_scrub_buffers": {
    "type": "void",
    "param": {
      "all": "bool"
    }
  },
  "oc_blockwise_scrub_buffers_for_client_cb": {
    "type": "void",
    "param": {
      "cb": "void*"
    }
  },
  "oc_allocate_message": {
    "type": "oc_message_t*",
    "param": {
    }
  },
  "oc_allocate_message_from_pool": {
    "type": "oc_message_t*",
    "param": {
      "pool": "struct oc_memb*"
    }
  },
  "oc_close_all_tls_sessions": {
    "type": "void",
    "param": {
    }
  },
  "oc_close_all_tls_sessions_for_device": {
    "type": "void",
    "param": {
      "device": "size_t"
    }
  },
  "oc_internal_allocate_outgoing_message": {
    "type": "oc_message_t*",
    "param": {
    }
  },
  "oc_message_add_ref": {
    "type": "void",
    "param": {
      "message": "oc_message_t*"
    }
  },
  "oc_message_unref": {
    "type": "void",
    "param": {
      "message": "oc_message_t*"
    }
  },
  "oc_recv_message": {
    "type": "void",
    "param": {
      "message": "oc_message_t*"
    }
  },
  "oc_send_message": {
    "type": "void",
    "param": {
      "message": "oc_message_t*"
    }
  },
  "oc_set_buffers_avail_cb": {
    "type": "void",
    "param": {
      "cb": "oc_memb_buffers_avail_callback_t"
    }
  },
  "oc_get_block_size": {
    "type": "long",
    "param": {
    }
  },
  "oc_get_max_app_data_size": {
    "type": "long",
    "param": {
    }
  },
  "oc_get_mtu_size": {
    "type": "long",
    "param": {
    }
  },
  "oc_set_max_app_data_size": {
    "type": "void",
    "param": {
      "size": "size_t"
    }
  },
  "oc_set_mtu_size": {
    "type": "int",
    "param": {
      "mtu_size": "size_t"
    }
  },
  "oc_ri_alloc_client_cb": {
    "type": "oc_client_cb_t*",
    "param": {
      "uri": "const char*",
      "endpoint": "oc_endpoint_t*",
      "method": "oc_method_t",
      "query": "const char*",
      "handler": "oc_client_handler_t",
      "qos": "oc_qos_t",
      "user_data": "void*"
    }
  },
  "oc_ri_find_client_cb_by_mid": {
    "type": "oc_client_cb_t*",
    "param": {
      "mid": "uint16_t"
    }
  },
  "oc_ri_find_client_cb_by_token": {
    "type": "oc_client_cb_t*",
    "param": {
      "token": "uint8_t*",
      "token_len": "uint8_t"
    }
  },
  "oc_ri_free_client_cbs_by_endpoint": {
    "type": "void",
    "param": {
      "endpoint": "oc_endpoint_t*"
    }
  },
  "oc_ri_free_client_cbs_by_mid": {
    "type": "void",
    "param": {
      "mid": "uint16_t"
    }
  },
  "oc_ri_get_client_cb": {
    "type": "oc_client_cb_t*",
    "param": {
      "uri": "const char*",
      "endpoint": "oc_endpoint_t*",
      "method": "oc_method_t"
    }
  },
  "oc_ri_invoke_client_cb": {
    "type": "bool",
    "param": {
      "response": "void*",
      "response_state": "oc_blockwise_state_t**",
      "cb": "oc_client_cb_t*",
      "endpoint": "oc_endpoint_t*"
    }
  },
  "oc_ri_is_client_cb_valid": {
    "type": "bool",
    "param": {
      "client_cb": "oc_client_cb_t*"
    }
  },
  "oc_ri_process_discovery_payload": {
    "type": "oc_discovery_flags_t",
    "param": {
      "payload": "uint8_t*",
      "len": "int",
      "handler": "oc_client_handler_t",
      "endpoint": "oc_endpoint_t*",
      "user_data": "void*"
    }
  },
  "oc_clock_init": {
    "type": "void",
    "param": {
    }
  },
  "oc_clock_seconds": {
    "type": "unsigned long",
    "param": {
    }
  },
  "oc_clock_time": {
    "type": "oc_clock_time_t",
    "param": {
    }
  },
  "oc_clock_wait": {
    "type": "void",
    "param": {
      "t": "oc_clock_time_t"
    }
  },
  "oc_clock_encode_time_rfc3339": {
    "type": "size_t",
    "param": {
      "time": "oc_clock_time_t",
      "out_buf": "char*",
      "out_buf_len": "size_t"
    }
  },
  "oc_clock_parse_time_rfc3339": {
    "type": "oc_clock_time_t",
    "param": {
      "in_buf": "const char*",
      "in_buf_len": "size_t"
    }
  },
  "oc_clock_time_rfc3339": {
    "type": "size_t",
    "param": {
      "out_buf": "char*",
      "out_buf_len": "size_t"
    }
  },
  "oc_cloud_add_resource": {
    "type": "int",
    "param": {
      "resource": "oc_resource_t*"
    }
  },
  "oc_cloud_delete_resource": {
    "type": "void",
    "param": {
      "resource": "oc_resource_t*"
    }
  },
  "oc_cloud_deregister": {
    "type": "int",
    "param": {
      "ctx": "oc_cloud_context_t*",
      "cb": "oc_cloud_cb_t",
      "data": "void*"
    }
  },
  "oc_cloud_discover_resources": {
    "type": "int",
    "param": {
      "ctx": "oc_cloud_context_t*",
      "handler": "oc_discovery_all_handler_t",
      "user_data": "void*"
    }
  },
  "oc_cloud_get_context": {
    "type": "oc_cloud_context_t*",
    "param": {
      "device": "size_t"
    }
  },
  "oc_cloud_get_token_expiry": {
    "type": "int",
    "param": {
      "ctx": "oc_cloud_context_t*"
    }
  },
  "oc_cloud_login": {
    "type": "int",
    "param": {
      "ctx": "oc_cloud_context_t*",
      "cb": "oc_cloud_cb_t",
      "data": "void*"
    }
  },
  "oc_cloud_logout": {
    "type": "int",
    "param": {
      "ctx": "oc_cloud_context_t*",
      "cb": "oc_cloud_cb_t",
      "data": "void*"
    }
  },
  "oc_cloud_manager_start": {
    "type": "int",
    "param": {
      "ctx": "oc_cloud_context_t*",
      "cb": "oc_cloud_cb_t",
      "data": "void*"
    }
  },
  "oc_cloud_manager_stop": {
    "type": "int",
    "param": {
      "ctx": "oc_cloud_context_t*"
    }
  },
  "oc_cloud_provision_conf_resource": {
    "type": "int",
    "param": {
      "ctx": "oc_cloud_context_t*",
      "server": "const char*",
      "access_token": "const char*",
      "server_id": "const char*",
      "auth_provider": "const char*"
    }
  },
  "oc_cloud_publish_resources": {
    "type": "int",
    "param": {
      "device": "size_t"
    }
  },
  "oc_cloud_refresh_token": {
    "type": "int",
    "param": {
      "ctx": "oc_cloud_context_t*",
      "cb": "oc_cloud_cb_t",
      "data": "void*"
    }
  },
  "oc_cloud_register": {
    "type": "int",
    "param": {
      "ctx": "oc_cloud_context_t*",
      "cb": "oc_cloud_cb_t",
      "data": "void*"
    }
  },
  "oc_check_if_collection": {
    "type": "bool",
    "param": {
      "resource": "oc_resource_t*"
    }
  },
  "oc_collection_add": {
    "type": "void",
    "param": {
      "collection": "oc_collection_t*"
    }
  },
  "oc_collection_alloc": {
    "type": "oc_collection_t*",
    "param": {
    }
  },
  "oc_collection_free": {
    "type": "void",
    "param": {
      "collection": "oc_collection_t*"
    }
  },
  "oc_collection_get_all": {
    "type": "oc_collection_t*",
    "param": {
    }
  },
  "oc_collections_free_rt_factories": {
    "type": "void",
    "param": {
    }
  },
  "oc_get_collection_by_uri": {
    "type": "oc_collection_t*",
    "param": {
      "uri_path": "const char*",
      "uri_path_len": "size_t",
      "device": "size_t"
    }
  },
  "oc_get_link_by_uri": {
    "type": "oc_link_t*",
    "param": {
      "collection": "oc_collection_t*",
      "uri_path": "const char*",
      "uri_path_len": "int"
    }
  },
  "oc_get_next_collection_with_link": {
    "type": "oc_collection_t*",
    "param": {
      "resource": "oc_resource_t*",
      "start": "oc_collection_t*"
    }
  },
  "oc_handle_collection_request": {
    "type": "bool",
    "param": {
      "method": "oc_method_t",
      "request": "oc_request_t*",
      "iface_mask": "oc_interface_mask_t",
      "notify_resource": "oc_resource_t*"
    }
  },
  "oc_link_set_interfaces": {
    "type": "void",
    "param": {
      "link": "oc_link_t*",
      "new_interfaces": "oc_interface_mask_t"
    }
  },
  "handle_network_interface_event_callback": {
    "type": "void",
    "param": {
      "event": "oc_interface_event_t"
    }
  },
  "handle_session_event_callback": {
    "type": "void",
    "param": {
      "endpoint": "const oc_endpoint_t*",
      "state": "oc_session_state_t"
    }
  },
  "oc_connectivity_end_session": {
    "type": "void",
    "param": {
      "endpoint": "oc_endpoint_t*"
    }
  },
  "oc_connectivity_get_endpoints": {
    "type": "oc_endpoint_t*",
    "param": {
      "device": "size_t"
    }
  },
  "oc_connectivity_init": {
    "type": "int",
    "param": {
      "device": "size_t"
    }
  },
  "oc_connectivity_shutdown": {
    "type": "void",
    "param": {
      "device": "size_t"
    }
  },
  "oc_dns_lookup": {
    "type": "int",
    "param": {
      "domain": "const char*",
      "addr": "oc_string_t*",
      "flags": "enum transport_flags"
    }
  },
  "oc_send_buffer": {
    "type": "int",
    "param": {
      "message": "oc_message_t*"
    }
  },
  "oc_send_discovery_request": {
    "type": "void",
    "param": {
      "message": "oc_message_t*"
    }
  },
  "oc_tcp_get_csm_state": {
    "type": "tcp_csm_state_t",
    "param": {
      "endpoint": "oc_endpoint_t*"
    }
  },
  "oc_tcp_update_csm_state": {
    "type": "int",
    "param": {
      "endpoint": "oc_endpoint_t*",
      "csm": "tcp_csm_state_t"
    }
  },
  "oc_core_add_new_device": {
    "type": "oc_device_info_t*",
    "param": {
      "uri": "const char*",
      "rt": "const char*",
      "name": "const char*",
      "spec_version": "const char*",
      "data_model_version": "const char*",
      "add_device_cb": "oc_core_add_device_cb_t",
      "data": "void*"
    }
  },
  "oc_core_encode_interfaces_mask": {
    "type": "void",
    "param": {
      "parent": "CborEncoder*",
      "iface_mask": "oc_interface_mask_t"
    }
  },
  "oc_core_get_device_id": {
    "type": "oc_uuid_t*",
    "param": {
      "device": "size_t"
    }
  },
  "oc_core_get_device_info": {
    "type": "oc_device_info_t*",
    "param": {
      "device": "size_t"
    }
  },
  "oc_core_get_latency": {
    "type": "int",
    "param": {
    }
  },
  "oc_core_get_num_devices": {
    "type": "size_t",
    "param": {
    }
  },
  "oc_core_get_platform_info": {
    "type": "oc_platform_info_t*",
    "param": {
    }
  },
  "oc_core_get_resource_by_index": {
    "type": "oc_resource_t*",
    "param": {
      "type": "int",
      "device": "size_t"
    }
  },
  "oc_core_get_resource_by_uri": {
    "type": "oc_resource_t*",
    "param": {
      "uri": "const char*",
      "device": "size_t"
    }
  },
  "oc_core_init": {
    "type": "void",
    "param": {
    }
  },
  "oc_core_init_platform": {
    "type": "oc_platform_info_t*",
    "param": {
      "mfg_name": "const char*",
      "init_cb": "oc_core_init_platform_cb_t",
      "data": "void*"
    }
  },
  "oc_core_is_DCR": {
    "type": "bool",
    "param": {
      "resource": "oc_resource_t*",
      "device": "size_t"
    }
  },
  "oc_core_populate_resource": {
    "type": "void",
    "param": {
      "core_resource": "int",
      "device_index": "size_t",
      "uri": "const char*",
      "iface_mask": "oc_interface_mask_t",
      "default_interface": "oc_interface_mask_t",
      "properties": "int",
      "get_cb": "oc_request_callback_t",
      "put_cb": "oc_request_callback_t",
      "post_cb": "oc_request_callback_t",
      "delete_cb": "oc_request_callback_t",
      "num_resource_types": "int"
    }
  },
  "oc_core_set_latency": {
    "type": "void",
    "param": {
      "latency": "int"
    }
  },
  "oc_core_shutdown": {
    "type": "void",
    "param": {
    }
  },
  "oc_filter_resource_by_rt": {
    "type": "bool",
    "param": {
      "resource": "oc_resource_t*",
      "request": "oc_request_t*"
    }
  },
  "oc_store_uri": {
    "type": "void",
    "param": {
      "s_uri": "const char*",
      "d_uri": "oc_string_t*"
    }
  },
  "oc_cred_credtype_string": {
    "type": "const char*",
    "param": {
      "credtype": "oc_sec_credtype_t"
    }
  },
  "oc_cred_parse_credusage": {
    "type": "oc_sec_credusage_t",
    "param": {
      "credusage_string": "oc_string_t*"
    }
  },
  "oc_cred_parse_encoding": {
    "type": "oc_sec_encoding_t",
    "param": {
      "encoding_string": "oc_string_t*"
    }
  },
  "oc_cred_read_credusage": {
    "type": "const char*",
    "param": {
      "credusage": "oc_sec_credusage_t"
    }
  },
  "oc_cred_read_encoding": {
    "type": "const char*",
    "param": {
      "encoding": "oc_sec_encoding_t"
    }
  },
  "oc_create_discovery_resource": {
    "type": "void",
    "param": {
      "resource_idx": "int",
      "device": "size_t"
    }
  },
  "oc_endpoint_compare": {
    "type": "int",
    "param": {
      "ep1": "const oc_endpoint_t*",
      "ep2": "const oc_endpoint_t*"
    }
  },
  "oc_endpoint_compare_address": {
    "type": "int",
    "param": {
      "ep1": "const oc_endpoint_t*",
      "ep2": "const oc_endpoint_t*"
    }
  },
  "oc_endpoint_copy": {
    "type": "void",
    "param": {
      "dst": "oc_endpoint_t*",
      "src": "oc_endpoint_t*"
    }
  },
  "oc_endpoint_list_copy": {
    "type": "void",
    "param": {
      "dst": "oc_endpoint_t**",
      "src": "oc_endpoint_t*"
    }
  },
  "oc_endpoint_set_di": {
    "type": "void",
    "param": {
      "endpoint": "oc_endpoint_t*",
      "di": "oc_uuid_t*"
    }
  },
  "oc_endpoint_set_local_address": {
    "type": "void",
    "param": {
      "ep": "oc_endpoint_t*",
      "interface_index": "int"
    }
  },
  "oc_endpoint_string_parse_path": {
    "type": "int",
    "param": {
      "endpoint_str": "oc_string_t*",
      "path": "oc_string_t*"
    }
  },
  "oc_endpoint_to_string": {
    "type": "int",
    "param": {
      "endpoint": "oc_endpoint_t*",
      "endpoint_str": "oc_string_t*"
    }
  },
  "oc_free_endpoint": {
    "type": "void",
    "param": {
      "endpoint": "oc_endpoint_t*"
    }
  },
  "oc_ipv6_endpoint_is_link_local": {
    "type": "int",
    "param": {
      "endpoint": "oc_endpoint_t*"
    }
  },
  "oc_new_endpoint": {
    "type": "oc_endpoint_t*",
    "param": {
    }
  },
  "oc_string_to_endpoint": {
    "type": "int",
    "param": {
      "endpoint_str": "oc_string_t*",
      "endpoint": "oc_endpoint_t*",
      "uri": "oc_string_t*"
    }
  },
  "oc_enum_pos_desc_to_str": {
    "type": "const char*",
    "param": {
      "pos": "oc_pos_description_t"
    }
  },
  "oc_enum_to_str": {
    "type": "const char*",
    "param": {
      "val": "oc_enum_t"
    }
  },
  "_oc_alloc_string": {
    "type": "void",
    "param": {
      "ocstring": "oc_string_t*",
      "size": "size_t"
    }
  },
  "_oc_alloc_string_array": {
    "type": "void",
    "param": {
      "ocstringarray": "oc_string_array_t*",
      "size": "size_t"
    }
  },
  "_oc_byte_string_array_add_item": {
    "type": "bool",
    "param": {
      "ocstringarray": "oc_string_array_t*",
      "str": "const char",
      "str_len": "size_t"
    }
  },
  "_oc_copy_byte_string_to_array": {
    "type": "bool",
    "param": {
      "ocstringarray": "oc_string_array_t*",
      "str": "const char",
      "str_len": "size_t",
      "index": "size_t"
    }
  },
  "_oc_copy_string_to_array": {
    "type": "bool",
    "param": {
      "ocstringarray": "oc_string_array_t*",
      "str": "const char",
      "index": "size_t"
    }
  },
  "_oc_free_array": {
    "type": "void",
    "param": {
      "ocarray": "oc_array_t*",
      "type": "pool"
    }
  },
  "_oc_free_string": {
    "type": "void",
    "param": {
      "ocstring": "oc_string_t*"
    }
  },
  "_oc_new_array": {
    "type": "void",
    "param": {
      "ocarray": "oc_array_t*",
      "size": "size_t",
      "type": "pool"
    }
  },
  "_oc_new_string": {
    "type": "void",
    "param": {
      "ocstring": "oc_string_t*",
      "str": "const char*",
      "str_len": "size_t"
    }
  },
  "_oc_string_array_add_item": {
    "type": "bool",
    "param": {
      "ocstringarray": "oc_string_array_t*",
      "str": "const char"
    }
  },
  "oc_concat_strings": {
    "type": "void",
    "param": {
      "concat": "oc_string_t*",
      "str1": "const char*",
      "str2": "const char*"
    }
  },
  "oc_join_string_array": {
    "type": "void",
    "param": {
      "ocstringarray": "oc_string_array_t*",
      "ocstring": "oc_string_t*"
    }
  },
  "oc_set_introspection_data": {
    "type": "void",
    "param": {
      "device": "size_t",
      "IDD": "uint8_t*",
      "IDD_size": "size_t"
    }
  },
  "oc_list_add": {
    "type": "void",
    "param": {
      "list": "oc_list_t",
      "item": "void*"
    }
  },
  "oc_list_chop": {
    "type": "void*",
    "param": {
      "list": "oc_list_t"
    }
  },
  "oc_list_copy": {
    "type": "void",
    "param": {
      "dest": "oc_list_t",
      "src": "oc_list_t"
    }
  },
  "oc_list_head": {
    "type": "void*",
    "param": {
      "list": "oc_list_t"
    }
  },
  "oc_list_init": {
    "type": "void",
    "param": {
      "list": "oc_list_t"
    }
  },
  "oc_list_insert": {
    "type": "void",
    "param": {
      "list": "oc_list_t",
      "previtem": "void*",
      "newitem": "void*"
    }
  },
  "oc_list_item_next": {
    "type": "void*",
    "param": {
      "item": "void*"
    }
  },
  "oc_list_length": {
    "type": "int",
    "param": {
      "list": "oc_list_t"
    }
  },
  "oc_list_pop": {
    "type": "void*",
    "param": {
      "list": "oc_list_t"
    }
  },
  "oc_list_push": {
    "type": "void",
    "param": {
      "list": "oc_list_t",
      "item": "void*"
    }
  },
  "oc_list_remove": {
    "type": "void",
    "param": {
      "list": "oc_list_t",
      "item": "void*"
    }
  },
  "oc_list_tail": {
    "type": "void*",
    "param": {
      "list": "oc_list_t"
    }
  },
  "_oc_memb_alloc": {
    "type": "void*",
    "param": {
      "m": "struct oc_memb*"
    }
  },
  "_oc_memb_free": {
    "type": "char",
    "param": {
      "m": "struct oc_memb*",
      "ptr": "void*"
    }
  },
  "oc_memb_init": {
    "type": "void",
    "param": {
      "m": "struct oc_memb*"
    }
  },
  "oc_memb_inmemb": {
    "type": "int",
    "param": {
      "m": "struct oc_memb*",
      "ptr": "void*"
    }
  },
  "oc_memb_numfree": {
    "type": "int",
    "param": {
      "m": "struct oc_memb*"
    }
  },
  "oc_memb_set_buffers_avail_cb": {
    "type": "void",
    "param": {
      "m": "struct oc_memb*",
      "cb": "oc_memb_buffers_avail_callback_t"
    }
  },
  "oc_mem_trace_add_pace": {
    "type": "void",
    "param": {
      "func": "const char*",
      "size": "int",
      "type": "int",
      "address": "void*"
    }
  },
  "oc_mem_trace_init": {
    "type": "void",
    "param": {
    }
  },
  "oc_mem_trace_shutdown": {
    "type": "void",
    "param": {
    }
  },
  "_oc_mmem_alloc": {
    "type": "size_t",
    "param": {
      "m": "struct oc_mmem*",
      "size": "size_t",
      "pool_type": "pool"
    }
  },
  "_oc_mmem_free": {
    "type": "void",
    "param": {
      "m": "struct oc_mmem*",
      "pool_type": "pool"
    }
  },
  "oc_mmem_init": {
    "type": "void",
    "param": {
    }
  },
  "oc_network_event": {
    "type": "void",
    "param": {
      "message": "oc_message_t*"
    }
  },
  "oc_network_interface_event": {
    "type": "void",
    "param": {
      "event": "oc_interface_event_t"
    }
  },
  "oc_network_event_handler_mutex_destroy": {
    "type": "void",
    "param": {
    }
  },
  "oc_network_event_handler_mutex_init": {
    "type": "void",
    "param": {
    }
  },
  "oc_network_event_handler_mutex_lock": {
    "type": "void",
    "param": {
    }
  },
  "oc_network_event_handler_mutex_unlock": {
    "type": "void",
    "param": {
    }
  },
  "oc_add_network_interface_event_callback": {
    "type": "int",
    "param": {
      "cb": "interface_event_handler_t"
    }
  },
  "oc_add_session_event_callback": {
    "type": "int",
    "param": {
      "cb": "session_event_handler_t"
    }
  },
  "oc_remove_network_interface_event_callback": {
    "type": "int",
    "param": {
      "cb": "interface_event_handler_t"
    }
  },
  "oc_remove_session_event_callback": {
    "type": "int",
    "param": {
      "cb": "session_event_handler_t"
    }
  },
  "oc_obt_ace_add_permission": {
    "type": "void",
    "param": {
      "ace": "oc_sec_ace_t*",
      "permission": "oc_ace_permissions_t"
    }
  },
  "oc_obt_ace_new_resource": {
    "type": "oc_ace_res_t*",
    "param": {
      "ace": "oc_sec_ace_t*"
    }
  },
  "oc_obt_ace_resource_set_href": {
    "type": "void",
    "param": {
      "resource": "oc_ace_res_t*",
      "href": "const char*"
    }
  },
  "oc_obt_ace_resource_set_wc": {
    "type": "void",
    "param": {
      "resource": "oc_ace_res_t*",
      "wc": "oc_ace_wildcard_t"
    }
  },
  "oc_obt_add_roleid": {
    "type": "oc_role_t*",
    "param": {
      "roles": "oc_role_t*",
      "role": "const char*",
      "authority": "const char*"
    }
  },
  "oc_obt_delete_ace_by_aceid": {
    "type": "int",
    "param": {
      "uuid": "oc_uuid_t*",
      "aceid": "int",
      "cb": "oc_obt_status_cb_t",
      "data": "void*"
    }
  },
  "oc_obt_delete_cred_by_credid": {
    "type": "int",
    "param": {
      "uuid": "oc_uuid_t*",
      "credid": "int",
      "cb": "oc_obt_status_cb_t",
      "data": "void*"
    }
  },
  "oc_obt_delete_own_cred_by_credid": {
    "type": "int",
    "param": {
      "credid": "int"
    }
  },
  "oc_obt_device_hard_reset": {
    "type": "int",
    "param": {
      "uuid": "oc_uuid_t*",
      "cb": "oc_obt_device_status_cb_t",
      "data": "void*"
    }
  },
  "oc_obt_discover_all_resources": {
    "type": "int",
    "param": {
      "uuid": "oc_uuid_t*",
      "handler": "oc_discovery_all_handler_t",
      "data": "void*"
    }
  },
  "oc_obt_discover_owned_devices": {
    "type": "int",
    "param": {
      "cb": "oc_obt_discovery_cb_t",
      "data": "void*"
    }
  },
  "oc_obt_discover_owned_devices_realm_local_ipv6": {
    "type": "int",
    "param": {
      "cb": "oc_obt_discovery_cb_t",
      "data": "void*"
    }
  },
  "oc_obt_discover_owned_devices_site_local_ipv6": {
    "type": "int",
    "param": {
      "cb": "oc_obt_discovery_cb_t",
      "data": "void*"
    }
  },
  "oc_obt_discover_unowned_devices": {
    "type": "int",
    "param": {
      "cb": "oc_obt_discovery_cb_t",
      "data": "void*"
    }
  },
  "oc_obt_discover_unowned_devices_realm_local_ipv6": {
    "type": "int",
    "param": {
      "cb": "oc_obt_discovery_cb_t",
      "data": "void*"
    }
  },
  "oc_obt_discover_unowned_devices_site_local_ipv6": {
    "type": "int",
    "param": {
      "cb": "oc_obt_discovery_cb_t",
      "data": "void*"
    }
  },
  "oc_obt_free_ace": {
    "type": "void",
    "param": {
      "ace": "oc_sec_ace_t*"
    }
  },
  "oc_obt_free_acl": {
    "type": "void",
    "param": {
      "acl": "oc_sec_acl_t*"
    }
  },
  "oc_obt_free_creds": {
    "type": "void",
    "param": {
      "creds": "oc_sec_creds_t*"
    }
  },
  "oc_obt_free_roleid": {
    "type": "void",
    "param": {
      "roles": "oc_role_t*"
    }
  },
  "oc_obt_init": {
    "type": "int",
    "param": {
    }
  },
  "oc_obt_new_ace_for_connection": {
    "type": "oc_sec_ace_t*",
    "param": {
      "conn": "oc_ace_connection_type_t"
    }
  },
  "oc_obt_new_ace_for_role": {
    "type": "oc_sec_ace_t*",
    "param": {
      "role": "const char*",
      "authority": "const char*"
    }
  },
  "oc_obt_new_ace_for_subject": {
    "type": "oc_sec_ace_t*",
    "param": {
      "uuid": "oc_uuid_t*"
    }
  },
  "oc_obt_perform_cert_otm": {
    "type": "int",
    "param": {
      "uuid": "oc_uuid_t*",
      "cb": "oc_obt_device_status_cb_t",
      "data": "void*"
    }
  },
  "oc_obt_perform_just_works_otm": {
    "type": "int",
    "param": {
      "uuid": "oc_uuid_t*",
      "cb": "oc_obt_device_status_cb_t",
      "data": "void*"
    }
  },
  "oc_obt_perform_random_pin_otm": {
    "type": "int",
    "param": {
      "uuid": "oc_uuid_t*",
      "pin": "const unsigned char*",
      "pin_len": "size_t",
      "cb": "oc_obt_device_status_cb_t",
      "data": "void*"
    }
  },
  "oc_obt_provision_ace": {
    "type": "int",
    "param": {
      "subject": "oc_uuid_t*",
      "ace": "oc_sec_ace_t*",
      "cb": "oc_obt_device_status_cb_t",
      "data": "void*"
    }
  },
  "oc_obt_provision_auth_wildcard_ace": {
    "type": "int",
    "param": {
      "subject": "oc_uuid_t*",
      "cb": "oc_obt_device_status_cb_t",
      "data": "void*"
    }
  },
  "oc_obt_provision_identity_certificate": {
    "type": "int",
    "param": {
      "uuid": "oc_uuid_t*",
      "cb": "oc_obt_status_cb_t",
      "data": "void*"
    }
  },
  "oc_obt_provision_pairwise_credentials": {
    "type": "int",
    "param": {
      "uuid1": "oc_uuid_t*",
      "uuid2": "oc_uuid_t*",
      "cb": "oc_obt_status_cb_t",
      "data": "void*"
    }
  },
  "oc_obt_provision_role_certificate": {
    "type": "int",
    "param": {
      "roles": "oc_role_t*",
      "uuid": "oc_uuid_t*",
      "cb": "oc_obt_status_cb_t",
      "data": "void*"
    }
  },
  "oc_obt_provision_role_wildcard_ace": {
    "type": "int",
    "param": {
      "subject": "oc_uuid_t*",
      "role": "const char*",
      "authority": "const char*",
      "cb": "oc_obt_device_status_cb_t",
      "data": "void*"
    }
  },
  "oc_obt_request_random_pin": {
    "type": "int",
    "param": {
      "uuid": "oc_uuid_t*",
      "cb": "oc_obt_device_status_cb_t",
      "data": "void*"
    }
  },
  "oc_obt_retrieve_acl": {
    "type": "int",
    "param": {
      "uuid": "oc_uuid_t*",
      "cb": "oc_obt_acl_cb_t",
      "data": "void*"
    }
  },
  "oc_obt_retrieve_creds": {
    "type": "int",
    "param": {
      "subject": "oc_uuid_t*",
      "cb": "oc_obt_creds_cb_t",
      "data": "void*"
    }
  },
  "oc_obt_retrieve_own_creds": {
    "type": "oc_sec_creds_t*",
    "param": {
    }
  },
  "oc_obt_set_sd_info": {
    "type": "void",
    "param": {
      "name": "char*",
      "priv": "bool"
    }
  },
  "oc_obt_shutdown": {
    "type": "void",
    "param": {
    }
  },
  "oc_pki_add_mfg_cert": {
    "type": "int",
    "param": {
      "device": "size_t",
      "cert": "const unsigned char*",
      "cert_size": "size_t",
      "key": "const unsigned char*",
      "key_size": "size_t"
    }
  },
  "oc_pki_add_mfg_intermediate_cert": {
    "type": "int",
    "param": {
      "device": "size_t",
      "credid": "int",
      "cert": "const unsigned char*",
      "cert_size": "size_t"
    }
  },
  "oc_pki_add_mfg_trust_anchor": {
    "type": "int",
    "param": {
      "device": "size_t",
      "cert": "const unsigned char*",
      "cert_size": "size_t"
    }
  },
  "oc_pki_add_trust_anchor": {
    "type": "int",
    "param": {
      "device": "size_t",
      "cert": "const unsigned char*",
      "cert_size": "size_t"
    }
  },
  "oc_pki_set_security_profile": {
    "type": "void",
    "param": {
      "device": "size_t",
      "supported_profiles": "oc_sp_types_t",
      "current_profile": "oc_sp_types_t",
      "mfg_credid": "int"
    }
  },
  "oc_random_destroy": {
    "type": "void",
    "param": {
    }
  },
  "oc_random_init": {
    "type": "void",
    "param": {
    }
  },
  "oc_random_value": {
    "type": "unsigned int",
    "param": {
    }
  },
  "oc_free_rep": {
    "type": "void",
    "param": {
      "rep": "oc_rep_t*"
    }
  },
  "oc_parse_rep": {
    "type": "int",
    "param": {
      "payload": "const uint8_t*",
      "payload_size": "int",
      "value_list": "oc_rep_t**"
    }
  },
  "oc_rep_get_bool": {
    "type": "bool",
    "param": {
      "rep": "oc_rep_t*",
      "key": "const char*",
      "value": "bool*"
    }
  },
  "oc_rep_get_bool_array": {
    "type": "bool",
    "param": {
      "rep": "oc_rep_t*",
      "key": "const char*",
      "value": "bool**",
      "size": "size_t*"
    }
  },
  "oc_rep_get_byte_string": {
    "type": "bool",
    "param": {
      "rep": "oc_rep_t*",
      "key": "const char*",
      "value": "char**",
      "size": "size_t*"
    }
  },
  "oc_rep_get_byte_string_array": {
    "type": "bool",
    "param": {
      "rep": "oc_rep_t*",
      "key": "const char*",
      "value": "oc_string_array_t*",
      "size": "size_t*"
    }
  },
  "oc_rep_get_cbor_errno": {
    "type": "CborError",
    "param": {
    }
  },
  "oc_rep_get_double": {
    "type": "bool",
    "param": {
      "rep": "oc_rep_t*",
      "key": "const char*",
      "value": "double*"
    }
  },
  "oc_rep_get_double_array": {
    "type": "bool",
    "param": {
      "rep": "oc_rep_t*",
      "key": "const char*",
      "value": "double**",
      "size": "size_t*"
    }
  },
  "oc_rep_get_encoded_payload_size": {
    "type": "int",
    "param": {
    }
  },
  "oc_rep_get_encoder_buf": {
    "type": "const uint8_t*",
    "param": {
    }
  },
  "oc_rep_get_int": {
    "type": "bool",
    "param": {
      "rep": "oc_rep_t*",
      "key": "const char*",
      "value": "int64_t*"
    }
  },
  "oc_rep_get_int_array": {
    "type": "bool",
    "param": {
      "rep": "oc_rep_t*",
      "key": "const char*",
      "value": "int64_t**",
      "size": "size_t*"
    }
  },
  "oc_rep_get_object": {
    "type": "bool",
    "param": {
      "rep": "oc_rep_t*",
      "key": "const char*",
      "value": "oc_rep_t**"
    }
  },
  "oc_rep_get_object_array": {
    "type": "bool",
    "param": {
      "rep": "oc_rep_t*",
      "key": "const char*",
      "value": "oc_rep_t**"
    }
  },
  "oc_rep_get_string": {
    "type": "bool",
    "param": {
      "rep": "oc_rep_t*",
      "key": "const char*",
      "value": "char**",
      "size": "size_t*"
    }
  },
  "oc_rep_get_string_array": {
    "type": "bool",
    "param": {
      "rep": "oc_rep_t*",
      "key": "const char*",
      "value": "oc_string_array_t*",
      "size": "size_t*"
    }
  },
  "oc_rep_new": {
    "type": "void",
    "param": {
      "payload": "uint8_t*",
      "size": "int"
    }
  },
  "oc_rep_set_pool": {
    "type": "void",
    "param": {
      "rep_objects_pool": "struct oc_memb*"
    }
  },
  "oc_rep_to_json": {
    "type": "size_t",
    "param": {
      "rep": "oc_rep_t*",
      "buf": "char*",
      "buf_size": "size_t",
      "pretty_print": "bool"
    }
  },
  "oc_ri_add_resource": {
    "type": "bool",
    "param": {
      "resource": "oc_resource_t*"
    }
  },
  "oc_ri_add_timed_event_callback_ticks": {
    "type": "void",
    "param": {
      "cb_data": "void*",
      "event_callback": "oc_trigger_t",
      "ticks": "oc_clock_time_t"
    }
  },
  "oc_ri_alloc_resource": {
    "type": "oc_resource_t*",
    "param": {
    }
  },
  "oc_ri_delete_resource": {
    "type": "bool",
    "param": {
      "resource": "oc_resource_t*"
    }
  },
  "oc_ri_free_resource_properties": {
    "type": "void",
    "param": {
      "resource": "oc_resource_t*"
    }
  },
  "oc_ri_get_app_resource_by_uri": {
    "type": "oc_resource_t*",
    "param": {
      "uri": "const char*",
      "uri_len": "size_t",
      "device": "size_t"
    }
  },
  "oc_ri_get_app_resources": {
    "type": "oc_resource_t*",
    "param": {
    }
  },
  "oc_ri_get_interface_mask": {
    "type": "oc_interface_mask_t",
    "param": {
      "iface": "char*",
      "if_len": "size_t"
    }
  },
  "oc_ri_get_query_nth_key_value": {
    "type": "int",
    "param": {
      "query": "const char*",
      "query_len": "size_t",
      "key": "char**",
      "key_len": "size_t*",
      "value": "char**",
      "value_len": "size_t*",
      "n": "size_t"
    }
  },
  "oc_ri_get_query_value": {
    "type": "int",
    "param": {
      "query": "const char*",
      "query_len": "size_t",
      "key": "const char*",
      "value": "char**"
    }
  },
  "oc_ri_init": {
    "type": "void",
    "param": {
    }
  },
  "oc_ri_is_app_resource_valid": {
    "type": "bool",
    "param": {
      "resource": "oc_resource_t*"
    }
  },
  "oc_ri_remove_timed_event_callback": {
    "type": "void",
    "param": {
      "cb_data": "void*",
      "event_callback": "oc_trigger_t"
    }
  },
  "oc_ri_shutdown": {
    "type": "void",
    "param": {
    }
  },
  "oc_status_code": {
    "type": "int",
    "param": {
      "key": "oc_status_t"
    }
  },
  "oc_session_end_event": {
    "type": "void",
    "param": {
      "endpoint": "oc_endpoint_t*"
    }
  },
  "oc_session_events_set_event_delay": {
    "type": "void",
    "param": {
      "secs": "int"
    }
  },
  "oc_session_start_event": {
    "type": "void",
    "param": {
      "endpoint": "oc_endpoint_t*"
    }
  },
  "_oc_signal_event_loop": {
    "type": "void",
    "param": {
    }
  },
  "oc_storage_config": {
    "type": "int",
    "param": {
      "store": "const char*"
    }
  },
  "oc_storage_read": {
    "type": "long",
    "param": {
      "store": "const char*",
      "buf": "uint8_t*",
      "size": "size_t"
    }
  },
  "oc_storage_write": {
    "type": "long",
    "param": {
      "store": "const char*",
      "buf": "uint8_t*",
      "size": "size_t"
    }
  },
  "oc_swupdate_notify_done": {
    "type": "void",
    "param": {
      "device": "size_t",
      "result": "oc_swupdate_result_t"
    }
  },
  "oc_swupdate_notify_downloaded": {
    "type": "void",
    "param": {
      "device": "size_t",
      "version": "const char*",
      "result": "oc_swupdate_result_t"
    }
  },
  "oc_swupdate_notify_new_version_available": {
    "type": "void",
    "param": {
      "device": "size_t",
      "version": "const char*",
      "result": "oc_swupdate_result_t"
    }
  },
  "oc_swupdate_notify_upgrading": {
    "type": "void",
    "param": {
      "device": "size_t",
      "version": "const char*",
      "timestamp": "oc_clock_time_t",
      "result": "oc_swupdate_result_t"
    }
  },
  "oc_swupdate_set_impl": {
    "type": "void",
    "param": {
      "swupdate_impl": "const oc_swupdate_cb_t*"
    }
  },
  "oc_gen_uuid": {
    "type": "void",
    "param": {
      "uuid": "oc_uuid_t*"
    }
  },
  "oc_str_to_uuid": {
    "type": "void",
    "param": {
      "str": "const char*",
      "uuid": "oc_uuid_t*"
    }
  },
  "oc_uuid_to_str": {
    "type": "void",
    "param": {
      "uuid": "const oc_uuid_t*",
      "buffer": "char*",
      "buflen": "int"
    }
  },
  "coap_separate_accept": {
    "type": "int",
    "param": {
      "request": "void*",
      "separate_response": "oc_separate_response_t*",
      "endpoint": "oc_endpoint_t*",
      "observe": "int",
      "block2_size": "uint16_t"
    }
  },
  "coap_separate_clear": {
    "type": "void",
    "param": {
      "separate_response": "oc_separate_response_t*",
      "separate_store": "coap_separate_t*"
    }
  },
  "coap_separate_resume": {
    "type": "void",
    "param": {
      "response": "void*",
      "separate_store": "coap_separate_t*",
      "code": "uint8_t",
      "mid": "uint16_t"
    }
  },
  "coap_check_transactions": {
    "type": "void",
    "param": {
    }
  },
  "coap_clear_transaction": {
    "type": "void",
    "param": {
      "t": "coap_transaction_t*"
    }
  },
  "coap_free_all_transactions": {
    "type": "void",
    "param": {
    }
  },
  "coap_free_transactions_by_endpoint": {
    "type": "void",
    "param": {
      "endpoint": "oc_endpoint_t*"
    }
  },
  "coap_get_transaction_by_mid": {
    "type": "coap_transaction_t*",
    "param": {
      "mid": "uint16_t"
    }
  },
  "coap_new_transaction": {
    "type": "coap_transaction_t*",
    "param": {
      "mid": "uint16_t",
      "endpoint": "oc_endpoint_t*"
    }
  },
  "coap_register_as_transaction_handler": {
    "type": "void",
    "param": {
    }
  },
  "coap_send_transaction": {
    "type": "void",
    "param": {
      "t": "coap_transaction_t*"
    }
  },
"helper_rep_set_double": {
	"type": "void",
	"param": {
		"object": "CborEncoder*",
		"key": "const char*",
		"value": "double"
	}
},
"helper_rep_set_long": {
	"type": "void",
	"param": {
		"object": "CborEncoder*",
		"key": "const char*",
		"value": "int64_t"
	}
},
"helper_rep_set_uint": {
	"type": "void",
	"param": {
		"object": "CborEncoder*",
		"key": "const char*",
		"value": "unsigned int"
	}
},
"helper_rep_set_boolean": {
	"type": "void",
	"param": {
		"object": "CborEncoder*",
		"key": "const char*",
		"value": "bool"
	}
},
"helper_rep_set_text_string": {
	"type": "void",
	"param": {
		"object": "CborEncoder*",
		"key": "const char*",
		"value": "const char*"
	}
},
"helper_rep_set_byte_string": {
	"type": "void",
	"param": {
		"object": "CborEncoder*",
		"key": "const char*",
		"value": "const unsigned char*",
		"length": "size_t"
	}
},
"helper_rep_start_array": {
	"type": "CborEncoder*",
	"param": {
		"parent": "CborEncoder*"
	}
},
"helper_rep_end_array": {
	"type": "void",
	"param": {
		"parent": "CborEncoder*",
		"arrayObject": "CborEncoder*"
	}
},
"helper_rep_start_links_array": {
	"type": "CborEncoder*", 
	"param": {
	}
},
"helper_rep_end_links_array": {
	"type": "void",
	"param": {
	}
},
"helper_rep_start_root_object": {
	"type": "CborEncoder*", 
	"param": {
	}
},
"helper_rep_end_root_object": {
	"type": "void",
	"param": {
	}
},
"helper_rep_add_byte_string": {
	"type": "void",
	"param": {
		"arrayObject": "CborEncoder*",
		"value": "const unsigned char*",
		"length": "const size_t"
	}
},
"helper_rep_add_text_string": {
	"type": "void",
	"param": {
		"arrayObject": "CborEncoder*",
		"value": "const char*"
	}
},
"helper_rep_add_double": {
	"type": "void",
	"param": {
		"arrayObject": "CborEncoder*",
		"value": "const double"
	}
},
"helper_rep_add_int": {
	"type": "void",
	"param": {
		"arrayObject": "CborEncoder*",
		"value": "const int64_t"
	}
},
"helper_rep_add_boolean": {
	"type": "void",
	"param": {
		"arrayObject": "CborEncoder*",
		"value": "const bool"
	}
},
"helper_rep_set_key": {
	"type": "void",
	"param": {
		"parent": "CborEncoder*",
		"key": "const char*"
	}
},
"helper_rep_set_array": {
	"type": "CborEncoder*",
	"param": {
		"parent": "CborEncoder*",
		"key": "const char*"
	}
},
"helper_rep_open_array": {
	"type": "CborEncoder*",
	"param": {
		"parent": "CborEncoder*",
		"key": "const char*"
	}
},
"helper_rep_close_array": {
	"type": "void",
	"param": {
		"object": "CborEncoder*",
		"arrayObject": "CborEncoder*"
	}
},
"helper_rep_start_object": {
	"type": "CborEncoder*",
	"param": {
		"parent": "CborEncoder*"
	}
},
"helper_rep_end_object": {
	"type": "void",
	"param": {
		"parent": "CborEncoder*",
		"object": "CborEncoder*"
	}
},
"helper_rep_object_array_start_item": {
	"type": "CborEncoder*",
	"param": {
		"arrayObject": "CborEncoder*"
	}
},
"helper_rep_object_array_end_item": {
	"type": "void",
	"param": {
		"parentArrayObject": "CborEncoder*",
		"arrayObject": "CborEncoder*"
	}
},
"helper_rep_open_object": {
	"type": "CborEncoder*",
	"param": {
		"parent": "CborEncoder*",
		"key": "const char*"
	}
},
"helper_rep_close_object": {
	"type": "void",
	"param": {
		"parent": "CborEncoder*",
		"object": "CborEncoder*"
	}
},
"helper_rep_set_long_array": {
	"type": "void",
	"param": {
		"object": "CborEncoder*",
		"key": "const char*",
		"values": "int64_t*",
		"length": "int"
	}
},
"helper_rep_set_bool_array": {
	"type": "void",
	"param": {
		"object": "CborEncoder*",
		"key": "const char*",
		"values": "bool*",
		"length": "int"
	}
},
"helper_rep_set_double_array": {
	"type": "void",
	"param": {
		"object": "CborEncoder*",
		"key": "const char*",
		"values": "double*",
		"length": "int"
	}
},
"helper_rep_rep_set_string_array": {
	"type": "void",
	"param": {
		"object": "CborEncoder*",
		"key": "const char*",
		"values": "oc_string_array_t"
	}
},
"helper_rep_get_rep_from_root_object": {
	"type": "oc_rep_t*",
	"param": {
	}
},
"helper_rep_get_cbor_errno": {
	"type": "int",
	"param": {
	}
},
"helper_rep_clear_cbor_errno": {
	"type": "void",
	"param": {
	}
},
"helper_rep_delete_buffer": {
	"type": "void",
	"param": {
	}
},
"helper_rep_new_buffer": {
	"type": "void",
	"param": {
		"size": "int"
	}
},
"helper_rep_oc_array_to_int_array": {
	"type": "const int64_t*",
	"param": {
		"array": "oc_array_t*"
	}
},
"helper_rep_oc_array_to_bool_array": {
	"type": "const bool*",
	"param": {
		"array": "oc_array_t*"
	}
},
"helper_rep_oc_array_to_double_array": {
	"type": "const double*",
	"param": {
		"array": "oc_array_t*"
	}
},
"helper_rep_oc_array_to_string_array": {
	"type": "const oc_string_array_t*",
	"param": {
		"array": "oc_array_t*"
	}
}
}
